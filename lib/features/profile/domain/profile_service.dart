import 'package:hooks_riverpod/hooks_riverpod.dart';
import 'package:noti/features/profile/domain/profile_entity.dart';
import 'package:noti/features/profile/data/profile_repository.dart';

// üü° Riverpod Dependency
final profileServiceProvider = Provider<ProfileUsecase>((ref) {
  final repository = ref.watch(profileRepositoryProvider);
  return ProfileService(repository);
});

/// Interface
abstract class ProfileUsecase {
  // ÌîÑÎ°úÌïÑ ÏÑ§Ï†ï Í∞ÄÏ†∏Ïò§Í∏∞
  Profile getProfile();

  // Î∞∞Í≤Ω Ïù¥ÎØ∏ÏßÄ Î≥ÄÍ≤Ω
  void changeBackground(String image);

  // Ï†úÎ™© ÏàòÏ†ï
  void editTitle(String title);

  // ÎÖ∏ÏÖò ÌôòÍ≤Ω ÏÑ§Ï†ï
  void configNotionKey(NotionKey key);
}

// Implementation
class ProfileService implements ProfileUsecase {
  final ProfileRepositoryPort _repository;

  ProfileService(this._repository);

  @override
  Profile getProfile() {
    return _repository.load();
  }

  @override
  void changeBackground(String image) {
    final profile = getProfile();
    final changed = profile.copyWith(image: image);

    _repository.save(changed);
  }

  @override
  void editTitle(String title) {
    final profile = getProfile();
    final edited = profile.copyWith(title: title);

    _repository.save(edited);
  }

  @override
  void configNotionKey(NotionKey key) {
    final profile = getProfile();
    final updated = profile.copyWith(key: key);

    _repository.save(updated);
  }
}
